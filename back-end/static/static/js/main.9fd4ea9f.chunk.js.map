{"version":3,"sources":["components/images/login.svg","components/Landing.js","components/image-upload/multiple-image-upload.js","components/Buttons.js","components/image-upload/Appa.js","login/login.js","login/register.js","login/Apps.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Landing","className","activeClassName","exact","to","MultipleImageUploadComponent","props","state","files","fileUrlArray","isLoading","predictions","saveSelectedFiles","bind","handleImageUpload","e","newFileUrls","i","target","length","push","URL","createObjectURL","newFiles","this","setState","preventDefault","data","FormData","forEach","imageFile","append","fetch","process","method","body","then","res","json","console","log","catch","error","onSubmit","map","url","index","key","src","alt","type","onChange","multiple","disabled","prediction","Component","Buttons","Appa","Login","ref","containerRef","loginImg","htmlFor","name","placeholder","React","Register","Apps","isLogginActive","rightSide","classList","add","remove","prevState","current","currentActive","container","onClick","changeState","RightSide","Footer","align","href","Date","getFullYear","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9fd4ea9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.95e4f0ad.svg\";","import React from 'react'\nimport './Landing.css'\nimport { NavLink } from 'react-router-dom'\n\nfunction Landing() {\n  return (\n    <div className=\"Header\">\n      <header>\n        <h1>Sonomaly</h1>\n        <div>\n        <NavLink\n            className='nav-link'\n            activeClassName='nav-link-active'\n            exact to='/'>Home</NavLink>\n          <NavLink\n            className='nav-link'\n            activeClassName='nav-link-active'\n            exact to='/login'>Login</NavLink>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Landing;","import React, { Component } from \"react\";\n\nexport default class MultipleImageUploadComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n      fileUrlArray: [],\n      isLoading: false,\n      predictions: []\n    };\n    this.saveSelectedFiles = this.saveSelectedFiles.bind(this);\n    this.handleImageUpload = this.handleImageUpload.bind(this);\n  }\n\n  saveSelectedFiles(e) {\n    const newFileUrls = [];\n    for (let i = 0; i < e.target.files.length; i++) {\n      newFileUrls.push(URL.createObjectURL(e.target.files[i]));\n    }\n    const newFiles = [];\n    for (let i = 0; i < e.target.files.length; i++) {\n      newFiles.push(e.target.files[i]);\n    }\n    this.setState({ fileUrlArray: newFileUrls });\n    this.setState({ files: newFiles });\n  }\n\n  handleImageUpload(e) {\n    e.preventDefault();\n\n    const data = new FormData();\n    this.state.files.forEach((imageFile) => {\n      data.append(\"files\", imageFile);\n    });\n\n    // const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    fetch(`${process.env.REACT_APP_API_URL}api/classify`, {\n      method: \"POST\",\n      body: data,\n    })\n      .then((res) => {\n        this.setState({ isLoading: false });\n        return res.json();\n      })\n      .then((data) => {\n        console.log(data); // The api prediction response is found here\n        this.setState({ predictions: data })\n      })\n      .catch((error) => {\n        this.setState({ isLoading: false });\n        console.log(\"Error\", error);\n      });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleImageUpload}>\n        <div className=\"form-group multi-preview\">\n          {(this.state.fileUrlArray || []).map((url, index) => (\n            <img key={index} src={url} alt=\"...\" />\n          ))}\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"file\"\n            className=\"form-control\"\n            onChange={this.saveSelectedFiles}\n            multiple\n          />\n        </div>\n        {!this.state.isLoading && (\n          <button type=\"submit\" className=\"btn btn-success btn-block\">\n            Upload\n          </button>\n        )}\n        {this.state.isLoading && (\n          <button disabled={true} className=\"btn btn-success btn-block\">\n            Loading...\n          </button>\n        )}\n        <br />\n        <h1>Prediction: {this.state.predictions.prediction}</h1>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './Buttons.css';\n\nfunction Buttons() {\n    return (\n        \n        <div>\n            <h1> Select Type:</h1>\n            <button type=\"button\" class=\"btn btn-primary\">Binary</button>\n            &nbsp;\n            <button type=\"button\" class=\"btn btn-secondary\">Multi</button>\n        </div>\n\n\n    )\n}\n\nexport default Buttons;","import React, {Component} from 'react';\n// import logo from './logo.svg';\n// import '../App.css';\n// import Landing from '../Landing';\nimport MultipleImageUploadComponent from './multiple-image-upload';\n// import { render } from 'react-dom';\nimport Buttons from '../Buttons';\n\n\n\nclass Appa extends Component {\n  render() {\n    return (\n      <div className=\"Appa\">\n        <div className='container'>\n          <div className='row'>\n            <div className=\"col-md-6\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  Multiple Image Upload Preview\n                </div>\n                <div className=\"card-body\">\n                  <MultipleImageUploadComponent />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* <div className='container'>\n          <div className='row'>\n              <div className=\"col-md-6\">\n                <div className=\"card\">\n                  <div className=\"card-header\">\n                    <Buttons />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div> */}\n        </div>\n    );\n  }\n}\n\nexport default Appa;\n","import React from \"react\";\nimport loginImg from \"../components/images/login.svg\";\n\nexport class Login extends React.Component {\n\n  render() {\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n        <div className=\"header\">Login</div>\n        <div className=\"content\">\n          <div className=\"image\">\n            <img src={loginImg} />\n          </div>\n          <div className=\"form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input type=\"text\" name=\"username\" placeholder=\"username\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" name=\"password\" placeholder=\"password\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"footer\">\n          <button type=\"button\" className=\"btn\">\n            Login\n          </button>\n        </div>\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport loginImg from \"../components/images/login.svg\";\n\nexport class Register extends React.Component {\n\n  render() {\n    return (\n      <div className=\"base-container\" ref={this.props.containerRef}>\n        <div className=\"header\">Register</div>\n        <div className=\"content\">\n          <div className=\"image\">\n            <img src={loginImg} />\n          </div>\n          <div className=\"form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <input type=\"text\" name=\"username\" placeholder=\"username\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"text\" name=\"email\" placeholder=\"email\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"text\" name=\"password\" placeholder=\"password\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"footer\">\n          <button type=\"button\" className=\"btn\">\n            Register\n          </button>\n        </div>\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport \"./Apps.scss\";\nimport { Login, Register } from \"./index\";\nimport './Apps.css'\n\nclass Apps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogginActive: true\n    };\n  }\n\n  componentDidMount() {\n    //Add .right by default\n    this.rightSide.classList.add(\"right\");\n  }\n\n  changeState() {\n    const { isLogginActive } = this.state;\n\n    if (isLogginActive) {\n      this.rightSide.classList.remove(\"right\");\n      this.rightSide.classList.add(\"left\");\n    } else {\n      this.rightSide.classList.remove(\"left\");\n      this.rightSide.classList.add(\"right\");\n    }\n    this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\n  }\n\n  render() {\n    const { isLogginActive } = this.state;\n    const current = isLogginActive ? \"Register\" : \"Login\";\n    const currentActive = isLogginActive ? \"login\" : \"register\";\n    return (\n      <div className=\"Apps\">\n        <div className=\"login\">\n          <div className=\"container\" ref={ref => (this.container = ref)}>\n            {isLogginActive && (\n              <Login containerRef={ref => (this.current = ref)} />\n            )}\n            {!isLogginActive && (\n              <Register containerRef={ref => (this.current = ref)} />\n            )}\n          </div>\n          <RightSide\n            current={current}\n            currentActive={currentActive}\n            containerRef={ref => (this.rightSide = ref)}\n            onClick={this.changeState.bind(this)}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst RightSide = props => {\n  return (\n    <div\n      className=\"right-side\"\n      ref={props.containerRef}\n      onClick={props.onClick}\n    >\n      <div className=\"inner-container\">\n        <div className=\"text\">{props.current}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Apps;\n","import React from 'react';\nimport './Footer.css'\n// import logo from \"../components/images/raptor_maps_logo.png\";\n\nfunction Footer() {\n    return (\n        <div className=\"page-container\">\n            <div className=\"content-wrap\">\n                <footer align=\"center\">\n                    <div className=\"socialbtns\">\n                        <ul>\n                            <li><a href=\"https://github.com/BrokenImage/raptor\" className=\"fa fa-lg fa-github\"></a></li>\n                        </ul>\n                    </div>\n                    &copy;{new Date().getFullYear()} Sonomaly | All rights reserved | Terms of Service | Privacy\n                 </footer>\n\n            </div>\n        </div>\n\n\n    );\n}\n\nexport default Footer;","import React, {Component} from 'react';\nimport './App.css';\nimport Landing from './components/Landing';\nimport Appa from './components/image-upload/Appa'\nimport Apps from './login/Apps'\n// import { render } from 'react-dom';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Footer from './components/Footer'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Landing />\n          <Route path='/' exact component={Appa} />\n          <Route path='/login' component={Apps} />\n          {/* <Appa /> */}\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootswatch/dist/spacelab/bootstrap.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}